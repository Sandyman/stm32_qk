<?xml version="1.0" encoding="UTF-8"?>
<model version="5.2.1" links="0">
 <framework name="qpcpp"/>
 <package name="Events" stereotype="0x01"/>
 <package name="Components" stereotype="0x02">
  <class name="Blink" superclass="qpcpp::QActive">
   <attribute name="inst" type="Blink" visibility="0x00" properties="0x01">
    <code>__CCMRAM;</code>
   </attribute>
   <attribute name="_TimeEvt" type="QP::QTimeEvt" visibility="0x02" properties="0x00"/>
   <operation name="Blink" type="" visibility="0x02" properties="0x00">
    <code> : QActive(&amp;initial),
   _TimeEvt(this, TIMEOUT_SIG, 0U)</code>
   </operation>
   <statechart properties="0x00">
    <initial target="../1">
     <initial_glyph conn="14,4,5,3,-10,6,2">
      <action box="-10,-2,10,2"/>
     </initial_glyph>
    </initial>
    <state name="blink">
     <initial target="../2">
      <initial_glyph conn="56,14,5,1,10,4,-2">
       <action box="0,-2,10,2"/>
      </initial_glyph>
     </initial>
     <state name="off">
      <entry>BSP::UserLed.set_low();

_TimeEvt.armX(msec(500));</entry>
      <exit>_TimeEvt.disarm();</exit>
      <tran trig="TIMEOUT" target="../../2">
       <tran_glyph conn="28,20,1,3,18">
        <action box="1,-2,10,2"/>
       </tran_glyph>
      </tran>
      <state_glyph node="10,16,18,10">
       <entry box="1,2,6,2"/>
       <exit box="1,4,6,2"/>
      </state_glyph>
     </state>
     <state name="on">
      <entry>const uint8_t angle_difference = 11;
static uint8_t angle = 0;

BSP::UserLed.set_high();

for (uint_fast8_t i = 0; i &lt; NUM_PIXELS; i++)
{
   // Calculate color
   uint32_t rgb_color = hsl_to_rgb(angle + (i * angle_difference), 255, 127);

   // Set color
   glow_set_RGB(i, rgb_color);
}

angle += 3;

// Write to LED
glow_render();

_TimeEvt.armX(msec(500));</entry>
      <exit>_TimeEvt.disarm();</exit>
      <tran trig="TIMEOUT" target="../../1">
       <tran_glyph conn="46,24,3,1,-18">
        <action box="-7,-2,10,2"/>
       </tran_glyph>
      </tran>
      <state_glyph node="46,16,18,10">
       <entry box="1,2,6,2"/>
       <exit box="1,4,6,2"/>
      </state_glyph>
     </state>
     <state_glyph node="6,6,78,58"/>
    </state>
    <state_diagram size="88,67"/>
   </statechart>
  </class>
  <attribute name="AO_Blink" type="QP::QActive * const" visibility="0x00" properties="0x00">
   <code> = &amp;Blink::inst;</code>
  </attribute>
 </package>
 <directory name="Src">
  <file name="blink.cpp">
   <text>#include &quot;blink.hpp&quot;
#include &quot;events.hpp&quot;
#include &quot;bsp.hpp&quot;
#include &quot;glow.h&quot;

Q_DEFINE_THIS_FILE

/**
 * @brief  Convert milliseconds into Ticks
 * @param  t : Time in milliseconds
 * @return Ticks for QP clock
 */
inline uint32_t msec(uint32_t t) { return t / 10U; };

$define(Components::Blink)

$define(Components::AO_Blink)</text>
  </file>
 </directory>
 <directory name="Inc">
  <file name="blink.hpp">
   <text>#ifndef BLINK_HPP_
#define BLINK_HPP_

#include &quot;qpcpp.hpp&quot;
#include &quot;signals.hpp&quot;

$declare(Components::Blink)

$declare(Components::AO_Blink)

#endif // BLINK_HPP_</text>
  </file>
  <file name="signals.hpp">
   <text>#ifndef SIGNALS_HPP
#define SIGNALS_HPP

enum
{
   TIMEOUT_SIG = QP::Q_USER_SIG,
   MAX_PUB_SIG,

   MAX_SIG
};

#endif // SIGNALS_HPP</text>
  </file>
  <file name="events.hpp">
   <text>#ifndef EVENTS_HPP
#define EVENTS_HPP

$declare${Events}

#endif // EVENTS_HPP</text>
  </file>
 </directory>
</model>
