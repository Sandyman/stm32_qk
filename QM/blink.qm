<?xml version="1.0" encoding="UTF-8"?>
<model version="5.2.1" links="0">
 <framework name="qpcpp"/>
 <package name="Events" stereotype="0x01">
  <class name="AccelDataEvt" superclass="qpcpp::QEvt">
   <attribute name="data[60]" type="uint8_t" visibility="0x00" properties="0x00"/>
  </class>
 </package>
 <package name="Components" stereotype="0x02">
  <package file="./blink.qmp"/>
  <package file="./accel.qmp"/>
 </package>
 <directory name="Src">
  <file name="blink.cpp">
   <text>#include &quot;blink.hpp&quot;
#include &quot;events.hpp&quot;
#include &quot;bsp.hpp&quot;
#include &quot;glow.h&quot;
#include &quot;utils.hpp&quot;

Q_DEFINE_THIS_FILE

$define(Components::Blink::Blink)

$define(Components::Blink::AO_Blink)</text>
  </file>
  <file name="accel.cpp">
   <text>#include &quot;accel.hpp&quot;
#include &quot;bsp.hpp&quot;
#include &quot;events.hpp&quot;
#include &quot;utils.hpp&quot;

Q_DEFINE_THIS_FILE

enum
{
   HIGH_WATERMARK_SIG = MAX_PUB_SIG,
   TILT_SIG,
   WAKE_UP_SIG,
   BACK_TO_SLEEP_SIG
};

$define(Components::Accel::Accel)

$define(Components::Accel::AO_Accel)</text>
  </file>
  <file name="utils.cpp">
   <text>#include &quot;utils.hpp&quot;
#include &quot;qassert.h&quot;

Q_DEFINE_THIS_MODULE(&quot;utils&quot;)


uint32_t msec(const uint32_t t)
{
   Q_REQUIRE(t &gt;= 10U);

   return t / 10U;
};</text>
  </file>
 </directory>
 <directory name="Inc">
  <file name="blink.hpp">
   <text>#ifndef BLINK_HPP_
#define BLINK_HPP_

#include &quot;qpcpp.hpp&quot;
#include &quot;signals.hpp&quot;

$declare(Components::Blink::Blink)

$declare(Components::Blink::AO_Blink)

#endif // BLINK_HPP_</text>
  </file>
  <file name="signals.hpp">
   <text>#ifndef SIGNALS_HPP_
#define SIGNALS_HPP_

enum
{
   TIMEOUT_SIG = QP::Q_USER_SIG,

   ACCEL_DATA_SIG,
   ACCEL_INT_SIG,
   ACCEL_DMA_RX_DONE_SIG,

   MAX_PUB_SIG
};

#endif // SIGNALS_HPP_</text>
  </file>
  <file name="events.hpp">
   <text>#ifndef EVENTS_HPP
#define EVENTS_HPP

$declare${Events}

#endif // EVENTS_HPP</text>
  </file>
  <file name="accel.hpp">
   <text>#ifndef ACCEL_HPP_
#define ACCEL_HPP_

#include &quot;qpcpp.hpp&quot;
#include &quot;signals.hpp&quot;

$declare(Components::Accel::Accel)

$declare(Components::Accel::AO_Accel)

#endif // ACCEL_HPP_</text>
  </file>
  <file name="utils.hpp">
   <text>#ifndef UTILS_HPP_
#define UTILS_HPP_

#include &lt;stdint.h&gt;

/**
 * @brief  Convert milliseconds into Ticks
 * @param  t : Time in milliseconds
 * @return Ticks for QP clock
 */
extern uint32_t msec(const uint32_t t);

#endif // UTILS_HPP_</text>
  </file>
 </directory>
</model>
